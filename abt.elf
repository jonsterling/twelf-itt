abt : nat -> sort -> type.
abt* : arity -> type.

<> : abt* @0.
; : abt* X -> abt I exp -> abt* (X , I).
%infix left 8 ;.

$ : operator X S -> abt* X -> abt z S.
%infix left 0 $.

Λ : (abt z hyp -> abt I S) -> abt (s I) S.
%prefix 9 Λ.

` : abt z hyp -> abt z neu.
%prefix 9 `.

@ : abt z use -> abt z neu -> abt z neu.
%infix right 7 @.

↓ : abt z neu -> abt z exp.
%prefix 7 ↓.

↑ : abt z val -> abt z exp.
%prefix 7 ↑.
